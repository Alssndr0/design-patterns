[project]
name = "design-patterns"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "ipykernel>=6.29.5",
    "pillow>=11.2.1",
    "ruff>=0.11.11",
    "transformers>=4.52.3",
]

[tool.poe.tasks]
singleton = "uv run run_with_cache.py patterns/creational/singleton.py" 
prototype = "uv run run_with_cache.py patterns/creational/prototype.py"
builder = "uv run run_with_cache.py patterns/creational/builder.py"
abstract_factory = "uv run run_with_cache.py patterns/creational/abstract_factory.py"
factory_method = "uv run run_with_cache.py patterns/creational/factory_method.py"
adapter = "uv run run_with_cache.py patterns/structural/adapter.py"
decorator = "uv run run_with_cache.py patterns/structural/decorator.py"
bridge = "uv run run_with_cache.py patterns/structural/bridge.py"
composite = "uv run run_with_cache.py patterns/structural/composite.py"
flyweight = "uv run run_with_cache.py patterns/structural/flyweight.py"
proxy = "uv run run_with_cache.py patterns/structural/proxy.py"
facade = "uv run run_with_cache.py patterns/structural/facade.py"
chain_of_responsibility = "uv run run_with_cache.py patterns/behavioural/chain_of_responsibility.py"
command = "uv run run_with_cache.py patterns/behavioural/command.py"
iterator = "uv run run_with_cache.py patterns/behavioural/iterator.py"
mediator = "uv run run_with_cache.py patterns/behavioural/mediator.py"
interpreter = "uv run run_with_cache.py patterns/behavioural/interpreter.py"
memento = "uv run run_with_cache.py patterns/behavioural/memento.py"
observer = "uv run run_with_cache.py patterns/behavioural/observer.py"
state = "uv run run_with_cache.py patterns/behavioural/state.py"
strategy = "uv run run_with_cache.py patterns/behavioural/strategy.py"
template_method = "uv run run_with_cache.py patterns/behavioural/template_method.py"
visitor = "uv run run_with_cache.py patterns/behavioural/visitor.py"